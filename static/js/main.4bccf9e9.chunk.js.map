{"version":3,"sources":["images/img-header-bg.jpg","images/img-world-icon.svg","components/About/About.jsx","components/CasesDetail/CasesDetail.jsx","images/index.js","components/CasesMap/CasesMap.jsx","components/CasesOverTime/CasesOverTime.jsx","utils/index.js","components/CasesSummary/CasesSummary.jsx","components/CountryPicker/CountryPicker.jsx","components/LineChart/LineChart.jsx","components/References/References.jsx","components/TwitterFeed/TwitterFeed.jsx","data/api/index.js","data/service/index.js","pages/Home/Home.jsx","App.js","index.js","components/CasesMap/CasesMap.module.css","components/CountryPicker/CountryPicker.module.css","pages/Home/Home.module.css","components/CasesDetail/CasesDetail.module.css","components/CasesSummary/CasesSummary.module.css","components/PreventiveMeasures/PreventiveMeasures.module.css"],"names":["module","exports","About","Card","className","variant","CardHeader","title","titleTypographyProps","component","CardContent","Typography","CasesDetail","data","lastUpdate","location","sources","subheader","List","styles","ul","filter","x","map","item","i","ListItem","key","li","extras","extra","HeaderBackground","require","WorldIcon","CasesMap","header","imgContainer","src","img","alt","CasesOverTime","getPercentage","number","total","toFixed","CasesSummary","start","end","duration","separator","cases","new","CountryPicker","countries","handleCountryChange","useState","selectedCountry","setSelectedCountry","FormControl","container","Autocomplete","options","value","select","getOptionLabel","country","name","renderInput","params","TextField","inputProps","onChange","e","renderOption","menuItem","flagUrl","LineChart","root","withStyles","display","padding","classes","restProps","Root","label","theme","paddingTop","spacing","whiteSpace","Label","Item","height","showGrid","valueField","argumentField","position","rootComponent","itemComponent","labelComponent","References","color","elapsedTime","durationInMilliseconds","portions","hours","Math","trunc","push","minutes","join","getElapsedTime","Date","now","getTime","getLastUpdate","length","Link","href","target","rel","underline","TwitterFeed","data-height","getSummary","a","fetchData","getCountries","getHistory","countryCode","url","console","log","axios","get","response","status","GetCountries","code","alpha2Code","population","latlng","flag","sort","b","localeCompare","unshift","GetDataByCountry","summary","Countries","find","CountryCode","Global","TotalConfirmed","NewConfirmed","toLocaleString","TotalRecovered","TotalDeaths","NewRecovered","NewDeaths","GetHistoryByCountry","histories","has","then","array","reverse","history","set","currentYear","getFullYear","Map","index","date","getMonth","active","Active","confirmed","Confirmed","Intl","DateTimeFormat","month","format","deaths","Deaths","recovered","Recovered","values","GetPreventiveMeasures","content","Home","casesOverTime","setCasesOverTime","setCountries","setCountry","setPreventiveMeasures","setSummary","useEffect","getPreventiveMeasures","getSummaryData","getCasesOverTime","picker","Container","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4bccf9e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/img-header-bg.6eb388f5.jpg\";","module.exports = __webpack_public_path__ + \"static/media/img-world-icon.9563fae0.svg\";","import React from 'react';\r\n\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\n\r\nconst About = () => {\r\n    return (\r\n        <Card className=\"card\" variant=\"outlined\">\r\n            <CardHeader title=\"About this data\" className=\"cardHeader\" titleTypographyProps={{ component: \"h2\", variant: \"inherit\" }} />\r\n\r\n            <CardContent className=\"cardContent\">\r\n                <Typography component=\"h3\" variant=\"inherit\">It changes rapidly</Typography>\r\n                <Typography variant=\"body2\">This data changes rapidly and might not reflect some cases still being reported.</Typography>\r\n\r\n                <Typography component=\"h3\" variant=\"inherit\">It only includes people tested</Typography>\r\n                <Typography variant=\"body2\">Cases only include people who were tested and confirmed positive. Testing rules and availability vary by country. Some areas may not have data because they haven’t published their data or haven’t done so recently.</Typography>\r\n\r\n                <Typography component=\"h3\" variant=\"inherit\">Why do I see different data from different sources?</Typography>\r\n                <Typography variant=\"body2\">There are various sources that are tracking and aggregating coronavirus data. They update at different times and may have different ways of gathering data.</Typography>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default About;","import React from 'react';\r\n\r\nimport styles from './CasesDetail.module.css';\r\nimport { References } from '../';\r\n\r\nimport { Card, CardContent, CardHeader, List, ListItem, Typography } from '@material-ui/core';\r\n\r\nconst CasesDetail = ({ data, lastUpdate, location, sources }) => {\r\n    return (\r\n        <Card className=\"card\" variant=\"outlined\">\r\n            <CardHeader title=\"Details\" subheader={location ?? 'Worldwide'} className=\"cardHeader\" titleTypographyProps={{ component: \"h2\", variant: \"inherit\" }} />\r\n\r\n            <CardContent className=\"cardContent\">\r\n                {\r\n                    <List className={styles.ul}>\r\n                        {data?.filter(x => x).map((item, i) =>\r\n                            <ListItem key={i} className={styles.li}>\r\n                                <Typography component=\"h3\" variant=\"inherit\">{item.title}</Typography>\r\n                                <List>\r\n                                    {item.extras?.filter(x => x).map((extra, x) =>\r\n                                        <ListItem key={x}>\r\n                                            <Typography variant=\"body2\">{extra}</Typography>\r\n                                        </ListItem>\r\n                                    )}\r\n                                </List>\r\n                            </ListItem>\r\n                        )}\r\n                    </List>\r\n                }\r\n\r\n                <References sources={sources} lastUpdate={lastUpdate} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CasesDetail;","export const HeaderBackground = require('./img-header-bg.jpg');\r\nexport const WorldIcon = require('./img-world-icon.svg');","import React, { Fragment } from 'react';\r\n\r\nimport styles from './CasesMap.module.css';\r\n\r\nimport { HeaderBackground } from '../../images';\r\n\r\nconst CasesMap = () => {\r\n    return (\r\n        <Fragment>\r\n            <h2 className={styles.header}>Coronavirus (COVID-19)</h2>\r\n            <div className={styles.imgContainer}>\r\n                <img src={HeaderBackground} className={styles.img} alt=\"Map of Covid-19 cases across the globe\" />\r\n            </div>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default CasesMap;","import React, { Fragment } from 'react';\r\n\r\nimport { LineChart, References } from '../';\r\n\r\nimport { Card, CardContent, CardHeader, Typography } from '@material-ui/core';\r\n\r\nconst CasesOverTime = ({ location, data, sources }) => {\r\n    return (\r\n        <Card className=\"card\" variant=\"outlined\">\r\n            <CardHeader title=\"Cases over time\" subheader={location ?? 'Worldwide'} className=\"cardHeader\" titleTypographyProps={{ component: \"h2\", variant: \"inherit\" }} />\r\n\r\n            <CardContent className=\"cardContent\">\r\n                {data\r\n                    ? (\r\n                        <Fragment>\r\n                            <LineChart data={data} />\r\n                            <References sources={sources} />\r\n                        </Fragment>\r\n                    )\r\n                    : <Typography>- No data recorded -</Typography>\r\n                }\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CasesOverTime;","const getElapsedTime = (durationInMilliseconds) => {\r\n    const portions = [];\r\n    const msInHour = 1000 * 60 * 60;\r\n\r\n    const hours = Math.trunc(durationInMilliseconds / msInHour);\r\n\r\n    if (hours) {\r\n        portions.push(hours > 1 ? `${hours} hours` : `${hours} hour`);\r\n    }\r\n    else {\r\n        const msInMinutes = 1000 * 60;\r\n        const minutes = Math.trunc(durationInMilliseconds / msInMinutes);\r\n\r\n        if (minutes)\r\n            portions.push(minutes > 1 ? `${minutes} minutes` : `${minutes} minute`);\r\n    }\r\n\r\n    return portions.join(' ');\r\n}\r\n\r\nconst getPercentage = (number, total) => ((number / total) * 100).toFixed(2);\r\n\r\nexport { getElapsedTime, getPercentage };","import React from 'react';\r\n\r\nimport styles from './CasesSummary.module.css';\r\nimport { References } from '../';\r\nimport { getPercentage } from '../../utils';\r\n\r\nimport CountUp from 'react-countup';\r\nimport { Card, CardContent, CardHeader, List, ListItem, Typography } from '@material-ui/core';\r\n\r\nconst CasesSummary = ({ location, data, sources, lastUpdate }) => {\r\n    return (\r\n        <Card className=\"card\" variant=\"outlined\">\r\n            <CardHeader title={location ?? 'Worldwide'} className=\"cardHeader\" titleTypographyProps={{ component: \"h2\", variant: \"inherit\" }} />\r\n\r\n            <CardContent className=\"cardContent\">\r\n                <List className={styles.ul}>\r\n                    {data?.map((item, i) =>\r\n                        <ListItem key={i}>\r\n                            <Typography variant=\"body2\">{item.title}</Typography>\r\n                            <CountUp start={item.total / 2} end={item.total} duration={1.5} separator=\",\" className={styles.cases} />\r\n\r\n                            {item.new > 0 &&\r\n                                <Typography variant=\"caption\">Up {getPercentage(item.new, item.total)}% last 24h</Typography>\r\n                            }\r\n                        </ListItem>\r\n                    )}\r\n                </List>\r\n\r\n                <References sources={sources} lastUpdate={lastUpdate} />\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default CasesSummary;","import React, { useState } from 'react';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { FormControl, TextField, Typography } from '@material-ui/core';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\n\r\nconst CountryPicker = ({ countries, handleCountryChange }) => {\r\n    const [selectedCountry, setSelectedCountry] = useState('');\r\n\r\n    const onChange = (country) => {\r\n        setSelectedCountry(country);\r\n        handleCountryChange(country);\r\n    }\r\n\r\n    return (\r\n        // <FormControl className={styles.container}>\r\n        //     <Select onChange={(e) => onChange(e)} value={selectedCountry} renderValue={() => selectedCountry.name} className={styles.select}>\r\n        //         <MenuItem value=\"\" disabled>Select country</MenuItem>\r\n\r\n        //         {countries.map(country =>\r\n        //             <MenuItem key={country.code} value={country} className={styles.menuItem}>\r\n        //                 <img src={country.flagUrl} alt={`Flag: ${country.name}`} />\r\n        //                 <Typography>{country.name}</Typography>\r\n        //             </MenuItem>\r\n        //         )}\r\n        //     </Select>\r\n        // </FormControl>\r\n\r\n        <FormControl className={styles.container}>\r\n            <Autocomplete\r\n                options={countries}\r\n                value={selectedCountry}\r\n                className={styles.select}\r\n                getOptionLabel={country => country?.name ?? ''}\r\n                // getOptionSelected={(option, value) => option === value }\r\n                renderInput={params => <TextField {...params} inputProps={{ ...params.inputProps }} />}\r\n\r\n                onChange={(e, country) => { onChange(country) }}\r\n\r\n                renderOption={(country) => (\r\n                    <div className={styles.menuItem}>\r\n                        <img src={country.flagUrl} alt={`Flag: ${country.name}`} />\r\n                        <Typography>{country.name}</Typography>\r\n                    </div>\r\n                )}\r\n            />\r\n        </FormControl>\r\n    );\r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { ArgumentAxis, Chart, Legend, LineSeries, Tooltip, ValueAxis } from '@devexpress/dx-react-chart-material-ui';\r\nimport { EventTracker } from '@devexpress/dx-react-chart';\r\n\r\nconst LineChart = ({ data }) => {\r\n    const legendStyles = () => ({\r\n        root: {            \r\n            display: 'flex',\r\n            // flexDirection: 'row',\r\n            // margin: 'auto',\r\n            padding: '0',\r\n        },\r\n    });\r\n\r\n    const legendLabelStyles = theme => ({\r\n        label: {\r\n            paddingTop: theme.spacing(1),\r\n            whiteSpace: 'nowrap',\r\n        },\r\n    });\r\n\r\n    const legendItemStyles = () => ({\r\n        item: {\r\n            // display: 'flex',\r\n            // backgroundColor: 'lightcyan',\r\n        },\r\n    });\r\n\r\n    const legendRootBase = ({ classes, ...restProps }) => <Legend.Root {...restProps} className={classes.root} />;\r\n    const legendLabelBase = ({ classes, ...restProps }) => <Legend.Label className={classes.label} {...restProps} />;\r\n    const legendItemBase = ({ classes, ...restProps }) => <Legend.Item className={classes.item} {...restProps} />;\r\n\r\n    const root = withStyles(legendStyles, { name: 'LegendRoot' })(legendRootBase);\r\n    const label = withStyles(legendLabelStyles, { name: 'LegendLabel' })(legendLabelBase);\r\n    const item = withStyles(legendItemStyles, { name: 'LegendItem' })(legendItemBase);\r\n\r\n    return (\r\n        <Chart data={data} height=\"250\">\r\n            <ValueAxis showGrid={true} />\r\n            <ArgumentAxis showGrid={true}>\r\n                {/* <Label rotationAngle={45} overlappingBehavior=\"rotate\" /> */}\r\n            </ArgumentAxis>\r\n\r\n            <LineSeries name=\"Confirmed\" valueField=\"confirmed\" argumentField=\"date\" />\r\n            <LineSeries name=\"Deaths\" valueField=\"deaths\" argumentField=\"date\" />\r\n            <LineSeries name=\"Recovered\" valueField=\"recovered\" argumentField=\"date\" />\r\n            <LineSeries name=\"Active\" valueField=\"active\" argumentField=\"date\" />\r\n\r\n            <Legend position=\"bottom\" rootComponent={root} itemComponent={item} labelComponent={label} />\r\n\r\n            <EventTracker />\r\n            <Tooltip />\r\n        </Chart>\r\n    );\r\n}\r\n\r\nexport default LineChart;","import React from 'react';\r\n\r\nimport { getElapsedTime } from '../../utils';\r\n\r\nimport { Link, Typography } from '@material-ui/core';\r\n\r\nconst References = ({ sources, lastUpdate }) => {\r\n    const getLastUpdate = () => {\r\n        if (!lastUpdate)\r\n            return;\r\n\r\n        const elapsedTime = getElapsedTime(Date.now() - new Date(lastUpdate).getTime());\r\n\r\n        return `Updated less than ${elapsedTime} ago - `;\r\n    };\r\n\r\n    return (\r\n        <Typography variant=\"caption\" color=\"textSecondary\">\r\n            {getLastUpdate()}\r\n\r\n            {sources?.length > 1 ? \"Sources\" : \"Source\"}:&nbsp;\r\n            {sources?.filter(item => item?.length === 2).map((item, i) =>\r\n                <Link key={i} href={item[1]} target=\"_blank\" rel=\"noreferrer\" color=\"inherit\" underline=\"always\">\r\n                    {item[0]}\r\n                </Link>\r\n            )}\r\n        </Typography>\r\n    );\r\n}\r\n\r\nexport default References;","import React from 'react';\r\n\r\nimport { Card, CardContent, Link } from '@material-ui/core';\r\n\r\nconst TwitterFeed = () => {\r\n    return (\r\n        <Card className=\"card\" variant=\"outlined\">\r\n            <CardContent className=\"cardContent\">\r\n                <Link className=\"twitter-timeline\" data-height=\"500\" href=\"https://twitter.com/WHO?ref_src=twsrc%5Etfw\">Tweets by WHO</Link>\r\n            </CardContent>\r\n        </Card>\r\n    );\r\n}\r\n\r\nexport default TwitterFeed;","import axios from 'axios';\r\n\r\nconst countriesBaseUrl = 'https://restcountries.eu/rest/v2/';\r\nconst countriesAll = 'all';\r\nconst covidBaseUrl = 'https://api.covid19api.com/';\r\nconst covidSummary = 'summary';\r\nconst covidCountryHistory = 'dayone/country/';\r\n\r\nconst getSummary = async () => await fetchData(`${covidBaseUrl}${covidSummary}`);\r\n\r\nconst getCountries = async () => await fetchData(`${countriesBaseUrl}${countriesAll}`);\r\n\r\nconst getHistory = async (countryCode) => await fetchData(`${covidBaseUrl}${covidCountryHistory}${countryCode}`);\r\n\r\nconst fetchData = async (url) => {\r\n    console.log(`Fetching data from ${url}`);\r\n\r\n    try {\r\n        const response = await axios.get(url);\r\n        return response.status === 200\r\n            ? response.data\r\n            : null;\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport { getCountries, getHistory, getSummary };","import { getCountries, getHistory, getSummary } from '../api';\r\nimport { getPercentage } from '../../utils';\r\nimport { WorldIcon } from '../../images';\r\n\r\nconst GetCountries = async () => {\r\n    if (!countries) {\r\n        countries = await getCountries();\r\n        countries = countries.map(country => ({\r\n            name: country.name,\r\n            code: country.alpha2Code,\r\n            population: country.population,\r\n            latlng: country.latlng,\r\n            flagUrl: country.flag\r\n        }));\r\n\r\n        countries.sort((a, b) => a.name.localeCompare(b.name));\r\n        countries.unshift({\r\n            name: 'Worldwide',\r\n            code: '',\r\n            population: 0,\r\n            flagUrl: WorldIcon\r\n        });\r\n    }\r\n\r\n    return countries;\r\n};\r\n\r\nconst GetDataByCountry = async (countryCode) => {\r\n    if (!summary)\r\n        summary = await getSummary();\r\n\r\n    const data = countryCode\r\n        ? summary?.Countries?.find(country => country.CountryCode === countryCode)\r\n        : summary?.Global;\r\n\r\n    const population = countryCode\r\n        ? countries?.find(country => country.code === countryCode)?.population\r\n        : null;\r\n\r\n    return {\r\n        lastUpdate: summary?.Date,\r\n        sources: [['Johns Hopkins CSSE', 'https://covid19api.com/'],],\r\n        data: [\r\n            {\r\n                title: 'Total cases',\r\n                total: data?.TotalConfirmed ?? 0,\r\n                new: data?.NewConfirmed ?? 0,\r\n                extras:\r\n                    data?.TotalConfirmed + data?.NewConfirmed > 0\r\n                        ? [\r\n                            `${data?.NewConfirmed.toLocaleString()} new cases in the past 24 hours`,\r\n                            `${getPercentage(data?.TotalConfirmed - (data?.TotalRecovered + data?.TotalDeaths), data?.TotalConfirmed)}% of all cases are still active`,\r\n                            countryCode ? `${getPercentage(data?.TotalConfirmed, summary?.Global.TotalConfirmed)}% of the global cases are local` : null,\r\n                            population ? `${getPercentage(data?.TotalConfirmed, population)}% of the population contracted the virus` : null,\r\n                        ]\r\n                        : ['No details to show'],\r\n            },\r\n            {\r\n                title: 'Recovered',\r\n                total: data?.TotalRecovered ?? 0,\r\n                new: data?.NewRecovered ?? 0,\r\n                extras: data?.TotalRecovered + data?.NewRecovered > 0\r\n                    ? [\r\n                        `${data?.NewRecovered.toLocaleString()} new cases in the past 24 hours`,\r\n                        `${getPercentage(data?.TotalRecovered, data?.TotalConfirmed)}% of all cases recovered`,\r\n                        countryCode ? `${getPercentage(data?.TotalRecovered, summary?.Global.TotalRecovered)}% of the global cases are local` : null,\r\n                        population ? `${getPercentage(data?.TotalRecovered, population)}% of the population got infected but recovered` : null,\r\n                    ]\r\n                    : ['No details to show'],\r\n            },\r\n            {\r\n                title: 'Deaths',\r\n                total: data?.TotalDeaths ?? 0,\r\n                new: data?.NewDeaths ?? 0,\r\n                extras: data?.TotalDeaths + data?.NewDeaths > 0\r\n                    ? [\r\n                        `${data?.NewDeaths.toLocaleString()} new cases in the past 24 hours`,\r\n                        `${getPercentage(data?.TotalDeaths, data?.TotalConfirmed)}% of all cases were fatal`,\r\n                        countryCode ? `${getPercentage(data?.TotalDeaths, summary?.Global.TotalDeaths)}% of the global cases are local` : null,\r\n                        population ? `${getPercentage(data?.TotalDeaths, population)}% of the country population died because of the virus` : null,\r\n                    ]\r\n                    : ['No details to show'],\r\n            },\r\n        ]\r\n    }\r\n};\r\n\r\nconst GetHistoryByCountry = async (countryCode) => {\r\n    if (!countryCode)\r\n    return [];\r\n    \r\n    if (!histories.has(countryCode)) {\r\n        const history = await getHistory(countryCode).then(array => array?.reverse());\r\n        histories.set(countryCode, history);\r\n    }\r\n    \r\n    const currentYear = new Date().getFullYear();\r\n    const history = histories.get(countryCode);\r\n    const map = new Map();\r\n\r\n    for (let index = 0; index < history?.length; index++) {\r\n        const log = history[index];\r\n        const date = new Date(log.Date);\r\n        const key = `${date.getMonth() + 1}, ${date.getFullYear()}`;\r\n\r\n        if (map.has(key) || date.getFullYear() !== currentYear)\r\n            continue;\r\n\r\n        map.set(key, {\r\n            active: log.Active,\r\n            confirmed: log.Confirmed,\r\n            date: new Intl.DateTimeFormat('en-US', { month: 'short' }).format(date),\r\n            deaths: log.Deaths,\r\n            recovered: log.Recovered,\r\n        });\r\n    }\r\n\r\n    return {\r\n        sources: [['Johns Hopkins CSSE', 'https://covid19api.com/'],],\r\n        data: [...map.values()].reverse(),\r\n    }\r\n};\r\n\r\nconst GetPreventiveMeasures = async () => {\r\n    return {\r\n        sources: [['World Health Organization', 'https://www.who.int/emergencies/diseases/novel-coronavirus-2019/advice-for-public'],],\r\n        data: [\r\n            {\r\n                title: 'Wash your hands frequently',\r\n                content: 'Regularly and thoroughly clean your hands with an alcohol-based hand rub or wash them with soap and water.',\r\n            },\r\n            {\r\n                title: 'Maintain social distance',\r\n                content: 'Maintain at least 1 metre (3 feet) distance between yourself and others.',\r\n            },\r\n            {\r\n                title: 'Stay clear of crowds',\r\n                content: 'Avoid going to crowded places.',\r\n            },\r\n            {\r\n                title: 'Avoid touching your face',\r\n                content: 'Avoid touching eyes, nose and mouth.',\r\n            },\r\n            {\r\n                title: 'Practice respiratory hygiene',\r\n                content: 'Make sure you, and the people around you, follow good respiratory hygiene. This means covering your mouth and nose with your bent elbow or tissue when you cough or sneeze. Then dispose of the used tissue immediately and wash your hands.',\r\n            },\r\n            {\r\n                title: 'Behave consciously',\r\n                content: 'Stay home and self-isolate even with minor symptoms such as cough, headache, mild fever, until you recover. Have someone bring you supplies. If you need to leave your house, wear a mask to avoid infecting others.',\r\n            },\r\n            {\r\n                title: 'Seek medical care',\r\n                content: 'If you have a fever, cough and difficulty breathing, seek medical attention, but call by telephone in advance if possible and follow the directions of your local health authority.',\r\n            },\r\n            {\r\n                title: 'Stay updated',\r\n                content: 'Keep up to date on the latest information from trusted sources, such as WHO or your local and national health authorities.',\r\n            },\r\n        ]\r\n    }\r\n};\r\n\r\nlet countries = null;\r\nlet histories = new Map();\r\nlet summary = null;\r\n\r\nexport { GetCountries, GetDataByCountry, GetHistoryByCountry, GetPreventiveMeasures };","import React, { Fragment, useState, useEffect } from 'react';\r\n\r\nimport styles from './Home.module.css';\r\nimport { About, CasesDetail, CasesMap, CasesOverTime, CasesSummary, CountryPicker, PreventiveMeasures, TwitterFeed } from '../../components';\r\nimport { GetCountries, GetDataByCountry, GetHistoryByCountry, GetPreventiveMeasures } from '../../data/service';\r\n\r\nimport { Container } from '@material-ui/core';\r\n\r\nconst Home = () => {\r\n    const [casesOverTime, setCasesOverTime] = useState([]);\r\n    const [countries, setCountries] = useState([]);\r\n    const [country, setCountry] = useState('');\r\n    const [preventiveMeasures, setPreventiveMeasures] = useState([]);\r\n    const [summary, setSummary] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const getCountries = async () => { setCountries(await GetCountries()); }\r\n        const getPreventiveMeasures = async () => { setPreventiveMeasures(await GetPreventiveMeasures()); }\r\n\r\n        getCountries();\r\n        getPreventiveMeasures();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getSummaryData = async () => { setSummary(await GetDataByCountry(country?.code)); }\r\n\r\n        getSummaryData();\r\n    }, [country]);\r\n\r\n    useEffect(() => {\r\n        const getCasesOverTime = async () => { setCasesOverTime(await GetHistoryByCountry(country?.code)); }\r\n\r\n        getCasesOverTime();\r\n    }, [country]);\r\n\r\n    const handleCountryChange = async (country) => setCountry(country);\r\n\r\n    return (\r\n        <Fragment>\r\n            <section>\r\n                <CasesMap />\r\n            </section>\r\n\r\n            <article className={styles.picker}>\r\n                <CountryPicker countries={countries} handleCountryChange={handleCountryChange} />\r\n            </article>\r\n\r\n            <Container className={styles.container}>\r\n                <section>\r\n                    <CasesSummary location={country?.name} data={summary?.data} sources={summary?.sources} lastUpdate={summary?.lastUpdate} />\r\n\r\n                    <CasesDetail location={country?.name} data={summary?.data} sources={summary?.sources} lastUpdate={summary?.lastUpdate} />\r\n\r\n                    {country && casesOverTime?.data?.length > 0 &&\r\n                        <CasesOverTime location={country?.name} data={casesOverTime?.data} sources={casesOverTime?.sources} />\r\n                    }\r\n\r\n                    {/* <PreventiveMeasures data={preventiveMeasures.data} sources={preventiveMeasures.sources} lastUpdate={preventiveMeasures.lastUpdate} /> */}\r\n                </section>\r\n\r\n                <section>\r\n                    <TwitterFeed />\r\n                    <About />\r\n                </section>\r\n            </Container>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default Home;","import React, { Fragment } from 'react';\r\n\r\nimport { Home } from './pages';\r\n\r\nconst App = () => {\r\n    return (\r\n        <Fragment>\r\n            <header>\r\n                <p className=\"warning\">This is a work in progress</p>\r\n            </header>\r\n\r\n            <main>\r\n                <Home />\r\n            </main>\r\n\r\n            <footer>\r\n                <p>Made by Nahuel Ianni</p>\r\n            </footer>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root'));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"imgContainer\":\"CasesMap_imgContainer__1YhYk\",\"header\":\"CasesMap_header__3zBt_\",\"img\":\"CasesMap_img__1dL-f\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CountryPicker_container__1w2zm\",\"menuItem\":\"CountryPicker_menuItem__2hBf1\",\"select\":\"CountryPicker_select__2GsZt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__3JI3T\",\"picker\":\"Home_picker__3wU5u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"CasesDetail_li__Jmanv\",\"ul\":\"CasesDetail_ul__4aFWf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cases\":\"CasesSummary_cases__t0bUb\",\"ul\":\"CasesSummary_ul__3Ycr7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"PreventiveMeasures_li__1Ie1i\"};"],"sourceRoot":""}